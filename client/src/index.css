@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Russo+One&display=swap');

:root {
  /* Colors */
  --outline-color: rgb(255, 255, 255);
  --fill-color: #ff0329;
  
  /* Text properties */
  --stroke-width: 2px;
  --text-size: 12rem;
  --letter-spacing: 0.05em;
  
  /* Shadow properties */
  --shadow-offset: 2px;
  --shadow-spread: 0;
  --shadow-opacity: 1;
  
  /* Fill glow effect */
  --fill-glow-size: 10px;
  --fill-glow-opacity: 0.5;
  
  /* Animation properties */
  --shake-base: 2px;
  --pulse-intensity: 15px;
  --pulse-rotation: 1deg;
  --shake-speed: 0.15s;
}

body {
  margin: 0;
  padding: 0;
  font-family: 'Russo One', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow: hidden;
}

#root {
  height: 100vh;
}

.ready-text {
  font-size: var(--text-size);
  font-weight: bold;
  letter-spacing: var(--letter-spacing);
  -webkit-text-stroke: var(--stroke-width) var(--outline-color);
  -webkit-text-fill-color: transparent;
  filter: drop-shadow(var(--shadow-offset) var(--shadow-offset) var(--shadow-spread) rgba(var(--outline-color), var(--shadow-opacity))) 
         drop-shadow(calc(var(--shadow-offset) * -1) calc(var(--shadow-offset) * -1) var(--shadow-spread) rgba(var(--outline-color), var(--shadow-opacity)))
         drop-shadow(calc(var(--shadow-offset) * -1) var(--shadow-offset) var(--shadow-spread) rgba(var(--outline-color), var(--shadow-opacity)))
         drop-shadow(var(--shadow-offset) calc(var(--shadow-offset) * -1) var(--shadow-spread) rgba(var(--outline-color), var(--shadow-opacity)));
}

.ready-text-fill {
  -webkit-text-stroke: none;
  -webkit-text-fill-color: var(--fill-color);
  color: var(--fill-color);
  filter: drop-shadow(0 0 var(--fill-glow-size) rgba(0, 255, 0, var(--fill-glow-opacity)));
}

@keyframes constant-shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(var(--shake-intensity)); }
  75% { transform: translateX(calc(var(--shake-intensity) * -1)); }
}

@keyframes pulse-shake {
  0%, 100% { transform: translateX(0) rotate(0); }
  25% { transform: translateX(calc(var(--pulse-intensity) * -1)) rotate(calc(var(--pulse-rotation) * -1)); }
  75% { transform: translateX(var(--pulse-intensity)) rotate(var(--pulse-rotation)); }
}

.ready-container {
  --shake-intensity: var(--shake-base);
  animation: constant-shake var(--shake-speed) ease-in-out infinite;
  will-change: transform;
}

.ready-container.pulse {
  animation: pulse-shake var(--shake-speed) ease-in-out;
}

.fill-overlay {
  clip-path: inset(var(--fill-percentage) 0 0 0);
  transition: clip-path 0.3s ease-in-out;
  will-change: clip-path;
}

.letter-container {
  display: inline-block;
  position: relative;
}

.exploded-letter {
  display: inline-block;
  transition: transform 1s ease-out, opacity 1s ease-out;
}

.exploded-letter.active {
  opacity: 0;
}

.exploded-letter.green {
  -webkit-text-fill-color: var(--fill-color);
  color: var(--fill-color);
  filter: drop-shadow(0 0 var(--fill-glow-size) rgba(0, 255, 0, var(--fill-glow-opacity)));
}

.control-panel {
  @apply absolute bottom-4 left-0 right-0 flex items-center justify-center gap-4;
}

.count-display {
  @apply text-black font-bold text-xl bg-white/50 px-4 py-2 rounded;
}

.test-button {
  @apply bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded transition-colors;
}

.reset-button {
  @apply bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded transition-colors;
}